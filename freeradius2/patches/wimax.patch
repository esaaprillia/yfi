From e82ac3cf87bc5307a731fb1c2a437dd08bcde91a Mon Sep 17 00:00:00 2001
From: esaaprillia <esaapriliasalsabila@gmail.com>
Date: Wed, 9 Apr 2025 22:47:08 +0800
Subject: [PATCH] Update rlm_wimax.c

---
 src/modules/rlm_wimax/rlm_wimax.c | 62 +++++++++++++++----------------
 1 file changed, 31 insertions(+), 31 deletions(-)

diff --git a/src/modules/rlm_wimax/rlm_wimax.c b/src/modules/rlm_wimax/rlm_wimax.c
index c36169c..f7d18d6 100644
--- a/src/modules/rlm_wimax/rlm_wimax.c
+++ b/src/modules/rlm_wimax/rlm_wimax.c
@@ -172,7 +172,7 @@ static int wimax_postauth(void *instance, REQUEST *request)
 	rlm_wimax_t *inst = instance;
 	VALUE_PAIR *msk, *emsk, *vp;
 	VALUE_PAIR *mn_nai, *ip, *fa_rk;
-	HMAC_CTX hmac;
+	HMAC_CTX *hmac;
 	unsigned int rk1_len, rk2_len, rk_len;
 	int rk_lifetime = 3600;	/* ? */
 	uint32_t mip_spi;
@@ -213,20 +213,20 @@ static int wimax_postauth(void *instance, REQUEST *request)
 	/*
 	 *	MIP-RK-1 = HMAC-SSHA256(EMSK, usage-data | 0x01)
 	 */
-	HMAC_CTX_init(&hmac);
-	HMAC_Init_ex(&hmac, emsk->vp_octets, emsk->length, EVP_sha256(), NULL);
+	hmac = HMAC_CTX_new();
+	HMAC_Init_ex(hmac, emsk->vp_octets, emsk->length, EVP_sha256(), NULL);
 	
-	HMAC_Update(&hmac, &usage_data[0], sizeof(usage_data));
-	HMAC_Final(&hmac, &mip_rk_1[0], &rk1_len);
+	HMAC_Update(hmac, &usage_data[0], sizeof(usage_data));
+	HMAC_Final(hmac, &mip_rk_1[0], &rk1_len);
 
 	/*
 	 *	MIP-RK-2 = HMAC-SSHA256(EMSK, MIP-RK-1 | usage-data | 0x01)
 	 */
-	HMAC_Init_ex(&hmac, emsk->vp_octets, emsk->length, EVP_sha256(), NULL);
+	HMAC_Init_ex(hmac, emsk->vp_octets, emsk->length, EVP_sha256(), NULL);
 	
-	HMAC_Update(&hmac, (const uint8_t *) &mip_rk_1, rk1_len);
-	HMAC_Update(&hmac, &usage_data[0], sizeof(usage_data));
-	HMAC_Final(&hmac, &mip_rk_2[0], &rk2_len);
+	HMAC_Update(hmac, (const uint8_t *) &mip_rk_1, rk1_len);
+	HMAC_Update(hmac, &usage_data[0], sizeof(usage_data));
+	HMAC_Final(hmac, &mip_rk_2[0], &rk2_len);
 
 	vp = pairfind(request->reply->vps, PW_SESSION_TIMEOUT);
 	if (vp) rk_lifetime = vp->vp_integer;
@@ -238,10 +238,10 @@ static int wimax_postauth(void *instance, REQUEST *request)
 	/*
 	 *	MIP-SPI = HMAC-SSHA256(MIP-RK, "SPI CMIP PMIP");
 	 */
-	HMAC_Init_ex(&hmac, mip_rk, rk_len, EVP_sha256(), NULL);
+	HMAC_Init_ex(hmac, mip_rk, rk_len, EVP_sha256(), NULL);
 	
-	HMAC_Update(&hmac, (const uint8_t *) "SPI CMIP PMIP", 12);
-	HMAC_Final(&hmac, &mip_rk_1[0], &rk1_len);
+	HMAC_Update(hmac, (const uint8_t *) "SPI CMIP PMIP", 12);
+	HMAC_Final(hmac, &mip_rk_1[0], &rk1_len);
 
 	/*
 	 *	Take the 4 most significant octets.
@@ -302,12 +302,12 @@ static int wimax_postauth(void *instance, REQUEST *request)
 		 *	MN-HA-PMIP4 =
 		 *	   H(MIP-RK, "PMIP4 MN HA" | HA-IPv4 | MN-NAI);
 		 */
-		HMAC_Init_ex(&hmac, mip_rk, rk_len, EVP_sha1(), NULL);
+		HMAC_Init_ex(hmac, mip_rk, rk_len, EVP_sha1(), NULL);
 
-		HMAC_Update(&hmac, (const uint8_t *) "PMIP4 MN HA", 11);
-		HMAC_Update(&hmac, (const uint8_t *) &ip->vp_ipaddr, 4);
-		HMAC_Update(&hmac, (const uint8_t *) &mn_nai->vp_strvalue, mn_nai->length);
-		HMAC_Final(&hmac, &mip_rk_1[0], &rk1_len);
+		HMAC_Update(hmac, (const uint8_t *) "PMIP4 MN HA", 11);
+		HMAC_Update(hmac, (const uint8_t *) &ip->vp_ipaddr, 4);
+		HMAC_Update(hmac, (const uint8_t *) &mn_nai->vp_strvalue, mn_nai->length);
+		HMAC_Final(hmac, &mip_rk_1[0], &rk1_len);
 
 		/*
 		 *	Put MN-HA-PMIP4 into WiMAX-MN-hHA-MIP4-Key
@@ -353,12 +353,12 @@ static int wimax_postauth(void *instance, REQUEST *request)
 		 *	MN-HA-CMIP4 =
 		 *	   H(MIP-RK, "CMIP4 MN HA" | HA-IPv4 | MN-NAI);
 		 */
-		HMAC_Init_ex(&hmac, mip_rk, rk_len, EVP_sha1(), NULL);
+		HMAC_Init_ex(hmac, mip_rk, rk_len, EVP_sha1(), NULL);
 
-		HMAC_Update(&hmac, (const uint8_t *) "CMIP4 MN HA", 11);
-		HMAC_Update(&hmac, (const uint8_t *) &ip->vp_ipaddr, 4);
-		HMAC_Update(&hmac, (const uint8_t *) &mn_nai->vp_strvalue, mn_nai->length);
-		HMAC_Final(&hmac, &mip_rk_1[0], &rk1_len);
+		HMAC_Update(hmac, (const uint8_t *) "CMIP4 MN HA", 11);
+		HMAC_Update(hmac, (const uint8_t *) &ip->vp_ipaddr, 4);
+		HMAC_Update(hmac, (const uint8_t *) &mn_nai->vp_strvalue, mn_nai->length);
+		HMAC_Final(hmac, &mip_rk_1[0], &rk1_len);
 
 		/*
 		 *	Put MN-HA-CMIP4 into WiMAX-MN-hHA-MIP4-Key
@@ -404,12 +404,12 @@ static int wimax_postauth(void *instance, REQUEST *request)
 		 *	MN-HA-CMIP6 =
 		 *	   H(MIP-RK, "CMIP6 MN HA" | HA-IPv6 | MN-NAI);
 		 */
-		HMAC_Init_ex(&hmac, mip_rk, rk_len, EVP_sha1(), NULL);
+		HMAC_Init_ex(hmac, mip_rk, rk_len, EVP_sha1(), NULL);
 
-		HMAC_Update(&hmac, (const uint8_t *) "CMIP6 MN HA", 11);
-		HMAC_Update(&hmac, (const uint8_t *) &ip->vp_ipv6addr, 16);
-		HMAC_Update(&hmac, (const uint8_t *) &mn_nai->vp_strvalue, mn_nai->length);
-		HMAC_Final(&hmac, &mip_rk_1[0], &rk1_len);
+		HMAC_Update(hmac, (const uint8_t *) "CMIP6 MN HA", 11);
+		HMAC_Update(hmac, (const uint8_t *) &ip->vp_ipv6addr, 16);
+		HMAC_Update(hmac, (const uint8_t *) &mn_nai->vp_strvalue, mn_nai->length);
+		HMAC_Final(hmac, &mip_rk_1[0], &rk1_len);
 
 		/*
 		 *	Put MN-HA-CMIP6 into WiMAX-MN-hHA-MIP6-Key
@@ -452,11 +452,11 @@ static int wimax_postauth(void *instance, REQUEST *request)
 	 */
 	fa_rk = pairfind(request->reply->vps, WIMAX2ATTR(14));
 	if (fa_rk && (fa_rk->length <= 1)) {
-		HMAC_Init_ex(&hmac, mip_rk, rk_len, EVP_sha1(), NULL);
+		HMAC_Init_ex(hmac, mip_rk, rk_len, EVP_sha1(), NULL);
 		
-		HMAC_Update(&hmac, (const uint8_t *) "FA-RK", 5);
+		HMAC_Update(hmac, (const uint8_t *) "FA-RK", 5);
 
-		HMAC_Final(&hmac, &mip_rk_1[0], &rk1_len);
+		HMAC_Final(hmac, &mip_rk_1[0], &rk1_len);
 
 		memcpy(fa_rk->vp_octets, &mip_rk_1[0], rk1_len);
 		fa_rk->length = rk1_len;
@@ -511,7 +511,7 @@ static int wimax_postauth(void *instance, REQUEST *request)
 	/*
 	 *	Wipe the context of all sensitive information.
 	 */
-	HMAC_CTX_cleanup(&hmac);
+	HMAC_CTX_free(hmac);
 
 	return RLM_MODULE_UPDATED;
 }
